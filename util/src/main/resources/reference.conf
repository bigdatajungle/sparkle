sparkle {

  // write the annotated composite .conf settings to this file. 
  dump-config = ["/tmp/sparkle.conf.out"]

  logging {
    
    provider = logback  // Supported loggers are log4j, logback, & none

    levels {
      // set the root logging level (default level for all loggers)
      root = INFO
    }

    console {
      enable  = true  // write messages to the console if true
      pattern = "%d{HH:mm:ss.SSS} %-5p %c - %m%n"
      level   = WARN
    }

    file {
      enable = true                  // write messages to a file if true
      path = "/tmp/sparkle.log"      // path and log file name 
      max-size = "10MB"              // max file size 
      max-files = 2                  // number of files to keep
      append = true                  // append to existing file if present
      pattern = "%d{MM/dd HH:mm:ss.SSS} %-5p %c - %m%n"
      level = TRACE
    }
  }
  
  measure {
    // link Span time recordings to coda's Metrics library
    metrics-gateway {
      // send measurements from Span recording to the Metrics library 
      enable = true
      
      // send latency measurements at this level or better to Metrics
      // possible levels, in order from least to most detail: Info, Detail, or Trace. (e.g. Trace includes Detail and Info spans)
      level = Detail
    }
    
    tsv-gateway {
      enable = false

      // directory containing measurement files spans.tsv and gauged.tsv
      directory = "/tmp/sparkle-measurement"

      // send latency measurements at this level or better to a tsv file
      // possible levels, in order from least to most detail: Info, Detail, or Trace. (e.g. Trace includes Detail and Info spans)
      level = Detail
    }
  }

  metrics {
    graphite {
      prefix = "sparkle"
      prefix = ${?GRAPHITE_PREFIX}
      
      # http server to provide graphite metrics @ /metrics/graphite
      http {
        enable = false
        interface = "127.0.0.1"
        port  = 1236
      }
      
      # Metrics can be written directly to a graphite server.
      reporter {
        enable = false
        host = localhost
        host = ${?GRAPHITE_HOST}
        port = 2003
        interval = 5m
      }
    }
  }
}
